.\" Automatically generated by Pandoc 2.19.2
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "MPPINIT" "1" "March 24, 2022" "mppinit 1.0.0" "User Manual"
.hy
.SS NAME
.PP
mppinit - performs one-time MusicPlayerPlus initialization
.SS SYNOPSIS
.PP
\f[B]mppinit\f[R] [-a] [-b] [-d] [-e] [-l music_dir] [-n] [-o] [-q] [-r]
[-U] [-y] [-u] [bandcamp|discogs|discogs local|discogs upload vault
folder|import|kitty|metadata|mopidy|mpd|navidrome|soundcloud|spotify|sync|yams|youtube]
.SS DESCRIPTION
.PP
The \f[I]mppinit\f[R] command copies and configures default
MusicPlayerPlus configuration files in \f[V]$HOME/.config/\f[R] and
installs required Python modules if not already installed.
Some effort is made to identify the music library location (default:
$HOME/Music/).
The music library location can be specified on the command line with
\f[V]mppinit -l /path/to/library\f[R].
.PP
Invoked with the \f[V]bandcamp\f[R] argument, \f[I]mppinit bandcamp\f[R]
downloads the albums in your Bandcamp collections.
A valid Bandcamp username must be configured in
\f[V]$HOME/.config/calliope/calliope.conf\f[R].
The Bandcamp albums are downloaded to the \f[V]MUSIC_DIR\f[R] folder
configured in \f[V]$HOME/.config/mpprc\f[R] in a \f[V]Bandcamp\f[R]
sub-folder.
.PP
Invoked with the \f[V]soundcloud\f[R] argument, \f[I]mppinit
soundcloud\f[R] downloads the favorites in your Soundcloud account.
A valid Soundcloud user slug must be provided at the prompt.
The Soundcloud favorites are downloaded to the \f[V]MUSIC_DIR\f[R]
folder configured in \f[V]$HOME/.config/mpprc\f[R] in a
\f[V]Soundcloud\f[R] sub-folder.
.PP
Invoked with the \f[V]import\f[R] argument, \f[I]mppinit import\f[R]
imports the music library to the Beets media management system.
.PP
Invoked with the \f[V]discogs\f[R] argument, \f[I]mppinit discogs\f[R]
attempts to generate an Obsidian vault from a Discogs user collection.
Both \f[V]DISCOGS_USER\f[R] and \f[V]DISCOGS_TOKEN\f[R] must be
configured in \f[V]$HOME/.config/mpprc\f[R].
The location of the generated Obsidian vault can be specified by setting
\f[V]DISCOGS_DIR\f[R] in \f[V]mpprc\f[R].
Default location is \f[V]\[ti]/Documents/Obsidian/Discogs/\f[R].
.PP
Invoked with the \f[V]discogs local\f[R] argument, \f[I]mppinit discogs
local\f[R] attempts to generate an Obsidian vault from the local music
library.
Similar to above, \f[V]DISCOGS_USER\f[R] and \f[V]DISCOGS_TOKEN\f[R]
must be configured in \f[V]$HOME/.config/mpprc\f[R].
.PP
Invoked with the \f[V]kitty\f[R] argument, \f[I]mppinit kitty\f[R]
installs the Kitty terminal emulator used as the default terminal in
MusicPlayerPlus.
.PP
Invoked with the \f[V]metadata\f[R] argument, \f[I]mppinit metadata\f[R]
analyzess the MPD music library and creates a song similarity database
for playlist creation.
If accompanied by the \f[V]-e\f[R] argument, Essentia is used to
analyze, extract, and update the Beets library with acoustic
information.
If accompanied by the \f[V]-a\f[R] argument, AcousticBrainz is used to
retrieve audio information rather than analyzing audio files with
Essentia.
.PP
Invoked with the \f[V]mopidy\f[R] argument, \f[I]mppinit mopidy\f[R]
installs the Mopidy music server and several Mopidy extensions.
The user MPD service is deactivated and the Mopidy system service is
activated.
.PP
Invoked with the \f[V]mpd\f[R] argument, \f[I]mppinit mpd\f[R] activates
the Music Player Daemon (MPD) and deactivates the Mopidy music server
and Mopidy extensions.
.PP
Invoked with the \f[V]navidrome\f[R] argument, \f[I]mppinit
navidrome\f[R] installs the Navidrome music server and streamer.
The Navidrome user system service is activated.
To install a specified version of Navidrome, use the command
\f[V]mppinit navidrome <version>\f[R].
.PP
Invoked with the \f[V]sync\f[R] argument, \f[I]mppinit sync\f[R]
synchronizes MusicPlayerPlus configuration across all configuration
files.
.PP
Invoked with the \f[B]yams\f[R] argument, \f[I]mppinit yams\f[R]
activates the YAMS Last.fm scrobbler service.
.PP
Invoked with the \f[B]youtube\f[R] argument, \f[I]mppinit youtube\f[R]
installs the YouTube Music client youtube-music.
.SS COMMAND LINE OPTIONS
.TP
\f[B]-a\f[R]
indicates use AcousticBrainz to retrieve audio information rather than
using Essentia to analyze audio files
.TP
\f[B]-b\f[R]
indicates use Blissify to analyze audio information rather than using
Essentia to analyze audio files
.TP
\f[B]-d\f[R]
indicates install latest Beets development branch rather than the latest
stable release (for testing purposes)
.TP
\f[B]-e\f[R]
indicates use Essentia to analyze audio information
.TP
\f[B]-l music_dir\f[R]
specifies the location of the music library
.TP
\f[B]-o\f[R]
indicates overwrite any pre-existing configuration
.TP
\f[B]-q\f[R]
indicates quiet execution, no status messages
.TP
\f[B]-r\f[R]
indicates remove service rather than initialize service.
supported service removals: mopidy navidrome
.TP
\f[B]-U\f[R]
indicates do not upgrade installed Python modules
.TP
\f[B]-y\f[R]
indicates answer \[aq]yes\[aq] to all and proceed
.TP
\f[B]-u\f[R]
displays usage message and exits
.TP
\f[B]discogs\f[R]
generates an Obsidian vault from a Discogs user collection
.TP
\f[B]discogs local\f[R]
generates an Obsidian vault from your local music library
.TP
\f[B]import\f[R]
performs a Beets music library import
.TP
\f[B]metadata\f[R]
performs a Beets library metadata update
.TP
\f[B]mopidy\f[R]
Installs Mopidy and several extensions, deactivates MPD, activates
Mopidy
.TP
\f[B]mpd\f[R]
Activates MPD, deactivates Mopidy
.TP
\f[B]navidrome [version]\f[R]
Installs, configures, and activates Navidrome music server/streamer
.TP
\f[B]spotify\f[R]
installs the Spotify Music client \[aq]spotify_player\[aq]
.TP
\f[B]sync\f[R]
synchronizes MusicPlayerPlus configuration across configs
.TP
\f[B]yams\f[R]
activates the YAMS Last.fm scrobbler service
.TP
\f[B]youtube\f[R]
installs the YouTube Music client youtube-music
.PP
\f[I]mppinit\f[R] must be performed before a \f[I]sync\f[R],
\f[I]kitty\f[R], \f[I]metadata\f[R], \f[I]mopidy\f[R], \f[I]mpd\f[R],
\f[I]navidrome\f[R], \f[I]bandcamp\f[R], \f[I]soundcloud\f[R], or
\f[I]import\f[R]
.SS AUTHORS
.PP
Written by Ronald Record <github@ronrecord.com>
.SS LICENSING
.PP
MPPINIT is distributed under an Open Source license.
See the file LICENSE in the MPPINIT source distribution for information
on terms & conditions for accessing and otherwise using MPPINIT and for
a DISCLAIMER OF ALL WARRANTIES.
.SS BUGS
.PP
Submit bug reports online at:
.PP
<https://github.com/doctorfree/MusicPlayerPlus/issues>
.SS SEE ALSO
.PP
\f[B]mpplus\f[R](1), \f[B]mpcplus\f[R](1), \f[B]mpcpluskeys\f[R](1)
.PP
Full documentation and sources at:
.PP
<https://github.com/doctorfree/MusicPlayerPlus>
